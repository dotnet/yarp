variables:
  # Needed for Arcade template
- name: _TeamName
  value: AspNetCore
  # Needed for Microbuild template
- name: TeamName
  value: AspNetCore
- name: DOTNET_SKIP_FIRST_TIME_EXPERIENCE
  value: true
- name: _PublishUsingPipelines
  value: true
- name: _BuildConfig
  value: Release
# Rely on task Arcade injects, not auto-injected build step.
- template: /eng/common/templates/variables/pool-providers.yml@self
- name: skipComponentGovernanceDetection
  value: true

trigger:
  batch: true
  branches:
    exclude:
    - main
    - release/*
    - internal/release/*

pr:
  autoCancel: false
  branches:
    include:
    - '*'

resources:
  repositories:
  - repository: MicroBuildTemplate
    type: git
    name: 1ESPipelineTemplates/MicroBuildTemplate
    ref: refs/tags/release

extends:
  template: azure-pipelines/MicroBuild.1ES.Unofficial.yml@MicroBuildTemplate
  parameters:
    featureFlags:
      autoBaseline: true
    sdl:
      sourceAnalysisPool:
        name: $(DncEngInternalBuildPool)
        image: 1es-windows-2022
        os: windows
      policheck:
          enabled: true
      tsa:
        enabled: true
      codeql:
        tsaEnabled: true
      binskim:
        enabled: true
        # See https://dev.azure.com/securitytools/SecurityIntegration/_wiki/wikis/Guardian/1378/Glob-Format
        analyzeTargetGlob: '**\bin\Yarp.ReverseProxy\**.dll;**\bin\Yarp.Telemetry.Consumption\**.dll'
        preReleaseVersion: '4.3.1'
    stages:
    - stage: build
      displayName: Build
      jobs:
      - template: /eng/common/templates-official/jobs/jobs.yml@self
        parameters:
          enableMicrobuild: true
          enablePublishBuildArtifacts: true
          enablePublishTestResults: true
          enablePublishBuildAssets: true
          enablePublishUsingPipelines: ${{ variables._PublishUsingPipelines }}
          enableTelemetry: true
          mergeTestResults: true
          jobs:
          - job: Windows
            pool:
              name: $(DncEngInternalBuildPool)
              image: 1es-windows-2022
              os: windows
            variables:
            - group: Publish-Build-Assets
            - name: _OfficialBuildArgs
              value: /p:DotNetSignType=$(_SignType)
                     /p:TeamName=$(_TeamName)
                     /p:DotNetPublishUsingPipelines=$(_PublishUsingPipelines)
                     /p:OfficialBuildId=$(BUILD.BUILDNUMBER)
            - name: _SignType
              value: real
            steps:
            - checkout: self
              clean: true
            - script: eng\common\cibuild.cmd -configuration $(_BuildConfig) -prepareMachine $(_OfficialBuildArgs)
              displayName: Build and Publish
            - task: 1ES.PublishBuildArtifacts@1
              displayName: Upload TestResults
              condition: always()
              continueOnError: true
              inputs:
                PathtoPublish: artifacts/TestResults/$(_BuildConfig)/
                ArtifactName: $(Agent.Os)_$(Agent.JobName) TestResults
                PublishLocation: Container
            - task: 1ES.PublishBuildArtifacts@1
              displayName: Upload package artifacts
              condition: and(succeeded(), eq(variables['system.pullrequest.isfork'], false), eq(variables['_BuildConfig'], 'Release'))
              inputs:
                PathtoPublish: artifacts/packages/
                ArtifactName: artifacts
                PublishLocation: Container
    - template: /eng/common/templates-official/post-build/post-build.yml@self
      parameters:
        publishingInfraVersion: 3
        enableSymbolValidation: false
        enableSourceLinkValidation: false
        enableSigningValidation: false
        enableNugetValidation: false
        SDLValidationParameters:
          enable: true
          continueOnError: false
          params: ' -SourceToolsList @("policheck","credscan")
          -TsaInstanceURL $(_TsaInstanceURL)
          -TsaProjectName $(_TsaProjectName)
          -TsaNotificationEmail $(_TsaNotificationEmail)
          -TsaCodebaseAdmin $(_TsaCodebaseAdmin)
          -TsaBugAreaPath $(_TsaBugAreaPath)
          -TsaIterationPath $(_TsaIterationPath)
          -TsaRepositoryName "ReverseProxy"
          -TsaCodebaseName "ReverseProxy"
          -TsaPublish $True -PoliCheckAdditionalRunConfigParams @("UserExclusionPath < $(Build.SourcesDirectory)/eng/PoliCheckExclusions.xml")'
